@page "/screenings"
@using CinemaBooking.Web.Db.Entitites
@inject ScreeningService ScreeningService

<RadzenRow Style="height: 100%;">
    <RadzenColumn Size="3">
        <RadzenCard class="p-0" Style="height: 100%;">
            <AddScreeningComponent OnSaveScreening="HandleAddScreening" />
            <RadzenDataList Data="@screenings" Class="screening-list" WrapItems="true">
                <Template Context="screening">
                    <RadzenCard Style="width: 100%; padding: 0;">
                        <RadzenRow Gap="0">
                            <RadzenColumn Size="10" Class="rz-p-4 rz-ripple screening">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="rz-color-secondary">@(screening.Name)</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1" TagName="TagName.H6" class="rz-color-secondary">@(screening.Date)</RadzenText>
                            </RadzenColumn>
                            <RadzenColumn Class="rz-ripple remove-screening">
                                <RadzenStack JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center" class="h-100">
                                    <RadzenIcon Icon="@("<i class=\"fa-solid fa-trash\"></i>")" />
                                </RadzenStack>
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenCard>
                </Template>
            </RadzenDataList>
        </RadzenCard>
    </RadzenColumn>

    <RadzenColumn>
        <RadzenCard class="p-0" Style="height: 100%;">

        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

<style>
    .screening {
        min-height: 72px;
        background-color: var(--rz-secondary-lighter);
        cursor: pointer;
    }

    .remove-screening {
        min-height: 72px;
        background-color: var(--rz-danger-darker);
        cursor: pointer;
    }

    .screening-list {
        height: 100%;
        overflow-y: auto;
    }
</style>

@code {
    List<Screening>? screenings;
    Screening? screeningToAdd;

    protected override async Task OnInitializedAsync()
    {
        screenings = await ScreeningService.GetAllAsync();
    }

    async Task HandleAddScreening(bool addScreeningScuccess)
    {
        if (!addScreeningScuccess)
        {
            return;
        }
        screenings = await ScreeningService.GetAllAsync();
    }
}
